<?php
defined( 'ABSPATH' ) or die( 'Unauthorized' );

if ( ! class_exists( 'TurnstileMetaBoxes' ) ) :

class TurnstileMetaBoxes {

    public function __construct() {
        $this->setup_globals();
        $this->setup_filters();
        $this->setup_actions();
    }

    private function setup_globals() {

    }

    private function setup_actions() {
	add_action( 'turnstile_add_meta_boxes', array( $this, 'add_social_meta_box' ) );
	add_action( 'turnstile_add_meta_boxes', array( $this, 'add_metrics_meta_box' ) );

	add_action( 'turnstile_do_meta_boxes', array( $this, 'remove_metrics_meta_box' ) );
    }

    private function setup_filters() {
	add_filter( 'postbox_classes_post_turnstile-metrics', array( $this, 'add_meta_box_classes' ) );
	add_filter( 'postbox_classes_page_turnstile-metrics', array( $this, 'add_meta_box_classes' ) );
    }

    /**
     * Generated by the WordPress Meta Box generator
     * at http://jeremyhixon.com/tool/wordpress-meta-box-generator/
     */

    function add_social_meta_box() {
	add_meta_box(
	    'turnstile-social-ask',
	    __( 'Turnstile', 'turnstile' ),
	    array( $this, 'render_social_meta_box'),
	    'post',
	    'side',
	    'default'
	);
	add_meta_box(
	    'turnstile-social-ask',
	    __( 'Turnstile', 'turnstile' ),
	    arraY( $this, 'render_social_meta_box'),
	    'page',
	    'side',
	    'default'
	);
    }

    public function add_metrics_meta_box() {
	add_meta_box(
	    'turnstile-metrics',
	    __( 'Turnstile Metrics', 'turnstile' ),
	    array( $this, 'render_metrics_meta_box'),
	    'post',
	    'side',
	    'default'
	);
	add_meta_box(
	    'turnstile-metrics',
	    __('Turnstile Metrics', 'turnstile'),
	    array( $this, 'render_metrics_meta_box'),
	    'page',
	    'side',
	    'default'
	);
    }

    public function add_meta_box_classes($classes) {
	$turnstile_link = get_post_meta( get_post()->ID, 'turnstile-readmore-self', true );
	if (turnstile()->is_connected() && !empty($turnstile_link)) {
	    array_push($classes,'close_to_the_edge');
	}
	return $classes;
    }

    public function remove_metrics_meta_box(){
	global $post;
	if ( isset( $post ) ){
	    $turnstile = get_post_meta( $post->ID, 'turnstile-readmore-self', true );
	    if ( !isset( $turnstile ) ) {
		remove_meta_box( 'turnstile-metrics' , 'post' , 'side' );
		remove_meta_box( 'turnstile-metrics' , 'page' , 'side' );
	    }
	}
    }

    /**
     * Renders social login options meta box
     */
    public function render_social_meta_box( $post ) {
	wp_nonce_field( '_turnstile_nonce', 'turnstile_nonce' );
	$checked_init = "";
	if( !get_post_meta( $post->ID, 'turnstile-readmore-self', true ) ){
	    $checked_init = "checked";
	}
?>
    <p>Social login platforms available to go through your Turnstile read more link.</p>
    <p>
	    <input type="checkbox" name="turnstile_facebook" id="turnstile_facebook" value="facebook" <?php echo esc_html( $checked_init ); echo ( turnstile()->ask_get_meta( 'facebook' ) === "1" ) ? 'checked' : ''; ?>>
	    <label for="turnstile_facebook"><?php esc_html_e( 'Facebook', 'turnstile' ); ?></label>	</p>	<p>

	    <input type="checkbox" name="turnstile_linkedin" id="turnstile_linkedin" value="linkedin" <?php echo esc_html( $checked_init ); echo (turnstile()->ask_get_meta( 'linkedin' ) === "1" ) ? 'checked' : ''; ?>>
	    <label for="turnstile_linkedin"><?php esc_html_e( 'LinkedIn', 'turnstile' ); ?></label>	</p>	<p>

	    <input type="checkbox" name="turnstile_twitter" id="turnstile_twitter" value="twitter" <?php echo (turnstile()->ask_get_meta( 'twitter' ) === "1" ) ? 'checked' : ''; ?>>
	    <label for="turnstile_twitter"><?php esc_html_e( 'Twitter', 'turnstile' ); ?></label>	</p>	<p>

	    <input type="checkbox" name="turnstile_google" id="turnstile_google" value="google" <?php echo ( turnstile()->ask_get_meta( 'google' ) === "1" ) ? 'checked' : ''; ?>>
	    <label for="turnstile_google"><?php esc_html_e( 'Google', 'turnstile' ); ?></label>	</p>	<p>

	    <input type="checkbox" name="turnstile_instagram" id="turnstile_instagram" value="instagram" <?php echo ( turnstile()->ask_get_meta( 'instagram' ) === "1" ) ? 'checked' : ''; ?>>
	    <label for="turnstile_instagram"><?php esc_html_e( 'Instagram', 'turnstile' ); ?></label>	</p>	<p>

	    <input type="checkbox" name="turnstile_github" id="turnstile_github" value="github" <?php echo ( turnstile()->ask_get_meta( 'github' ) === "1" ) ? 'checked' : ''; ?>>
	    <label for="turnstile_github"><?php esc_html_e( 'Github', 'turnstile' ); ?></label>	</p>	<p>

	    <input disabled="disabled" type="checkbox" name="turnstile_pinterest" id="turnstile_pinterest" value="pinterest" <?php echo ( turnstile()->ask_get_meta( 'pinterest' ) === "1" ) ? 'checked' : ''; ?>>
	    <label for="turnstile_pinterest"><?php esc_html_e( 'Pinterest (soon)', 'turnstile' ); ?></label>	</p>	<p>
<?php
    }

    /**
     * Conditionally renders metrics meta box
     */
    public function render_metrics_meta_box( $post) {
	$turnstile = get_post_meta( $post->ID, 'turnstile-readmore-self', true );
	$token = get_option( 'turnstile_access_token' );
	if (!turnstile()->is_connected()) {
	    $this->render_connect_required();
	} else if (empty($turnstile)){
	    $this->render_add_shortcode_message();
	} else if (!empty($token)) {
	    $info_link = $this->info_link( $turnstile, $token );
	    $this->render_metrics_iframe( $info_link );
	}
    }

    function render_connect_required() {
?>
<p>
    <a style="border:0px" class="stuffbox" href="<?php echo( esc_url( turnstile()->connect_url() )); ?>">Connect to Turnstile</a>
</p>
<?php
    }

    function render_add_shortcode_message() {
?>
<p>
    Add a Turnstile shortcode to begin viewing metrics.
</p>
<?php
    }

    function render_metrics_iframe( $info_link ) {
?>
	    <iframe id="turnstile_post_metrics"
		    title="Turnstile Post Metrics"
		    width="278"
		    height="350"
		    frameBorder="0"
		    seamless='seamless'
		    scrolling="yes"
		    marginheight="0"
		    marginwidth="0"
		    src=<?php echo( esc_url( $info_link ) ); ?>>
	    </iframe>
<?php
    }

    function info_link( $turnstile, $token ) {
	$turnstile_code = trim( wp_parse_url( $turnstile, PHP_URL_PATH ), '/' );
	return turnstile()->url( 'info', $turnstile_code, "frame?token={$token}" );
    }

}
endif;
